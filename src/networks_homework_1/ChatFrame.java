package networks_homework_1;
import java.io.*; 
import java.math.BigInteger;
import java.net.*; 
import java.nio.ByteBuffer;
import java.util.Arrays;
import java.util.Collections;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
/**
 *
 * @author masri
 */
public class ChatFrame extends javax.swing.JFrame {

    
    public DatagramSocket sckt;
    private Integer srcPN,dstPN;
    private InetAddress srcIP,dstIP;
    //public recieveThread rt;
    public ChatFrame() {
        initComponents();
       // rt = new recieveThread(this);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        chatTA = new javax.swing.JTextArea();
        chatTF = new javax.swing.JTextField();
        srcPNTF = new javax.swing.JTextField();
        srcPNLbl = new javax.swing.JLabel();
        srcIPLbl = new javax.swing.JLabel();
        srcIPTF = new javax.swing.JTextField();
        dstPNLbl = new javax.swing.JLabel();
        dstPNTF = new javax.swing.JTextField();
        dstIPLbl = new javax.swing.JLabel();
        dstIPTF = new javax.swing.JTextField();
        chatBtn = new javax.swing.JButton();
        connectBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        chatTA.setColumns(20);
        chatTA.setRows(5);
        jScrollPane1.setViewportView(chatTA);

        chatTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chatTFActionPerformed(evt);
            }
        });

        srcPNLbl.setText("Source Port Number");

        srcIPLbl.setText("Source IP");

        dstPNLbl.setText("Destination Port Number");

        dstIPLbl.setText("Destination IP");

        chatBtn.setText("Send");
        chatBtn.setEnabled(false);
        chatBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chatBtnMouseClicked(evt);
            }
        });

        connectBtn.setText("Connect");
        connectBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                connectBtnMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(chatTF, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(chatBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(dstPNLbl)
                                    .addComponent(dstIPLbl))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(dstIPTF)
                                    .addComponent(dstPNTF)
                                    .addComponent(connectBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(srcPNLbl)
                                    .addComponent(srcIPLbl))
                                .addGap(25, 25, 25)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(srcIPTF)
                                    .addComponent(srcPNTF))))
                        .addGap(23, 23, 23))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(chatTF, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(srcIPTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(srcIPLbl))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(srcPNLbl)
                            .addComponent(srcPNTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dstIPTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dstIPLbl))
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dstPNTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dstPNLbl))
                        .addGap(18, 18, 18)
                        .addComponent(connectBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(chatBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    byte[] toBytes(String bytes[]){
        int numbers[] = new int[4];
          for (int i = 0; i < bytes.length; i++) {
              numbers[i] = Integer.parseInt(bytes[i]);
          }
        byte[] result = new byte[4];

        result[0] = (byte) (numbers[0]);
        result[1] = (byte) (numbers[1]);
        result[2] = (byte) (numbers[2]);
        result[3] = (byte) (numbers[3]);
        return result;
    }
    boolean checkInputs(){
        String[] srcIps = srcIPTF.getText().split("\\.");
        String[] dstIps = dstIPTF.getText().split("\\.");
        if(srcIps.length !=4 || dstIps.length !=4)
            return false;
        for (int i = 0; i < srcIps.length; i++) {
            if(Integer.parseInt(srcIps[i]) > 255)
                return false;
            if(Integer.parseInt(dstIps[i]) > 255)
                return false;
        }
        if(srcPNTF.getText().isEmpty() || dstPNTF.getText().isEmpty()){
            return false;
        }
        if(Integer.parseInt(srcPNTF.getText())>65536 ||Integer.parseInt(dstPNTF.getText())>65536)
            return false;
        return true;
    }
    
    public void recieveData() throws Exception{
        byte recievedData[] = new byte[1024];
        DatagramPacket rpckt = new DatagramPacket(recievedData,recievedData.length);
        sckt.receive(rpckt);
        String text = new String(rpckt.getData());
        int recievedPN = rpckt.getPort();
        chatTA.append(recievedPN+" : "+text+"\n");
    }
    
    private void chatTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chatTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chatTFActionPerformed

    private void chatBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chatBtnMouseClicked
        
        byte sentData[] = new byte[1024];
        String text = chatTF.getText();
        sentData = text.getBytes();
        DatagramPacket sendPckt = new DatagramPacket(sentData,sentData.length,dstIP,dstPN);
        try {
            sckt.send(sendPckt);
        } catch (IOException ex) {
            Logger.getLogger(ChatFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        chatTA.append(srcPN.toString()+" : "+text+"\n");
    }//GEN-LAST:event_chatBtnMouseClicked

    private void connectBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_connectBtnMouseClicked
 
//Source Info
        if (!checkInputs()) {
            JOptionPane.showMessageDialog(this, "Please enter correct details");
            return;
        }
        
        try {
        srcIP = InetAddress.getByAddress(toBytes(srcIPTF.getText().split("\\.")));
        } catch (UnknownHostException ex) {
            Logger.getLogger(ChatFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        srcPN = Integer.parseInt(srcPNTF.getText());
        
//Destination Info
        try {
        dstIP = InetAddress.getByAddress(toBytes(dstIPTF.getText().split("\\.")));
        } catch (UnknownHostException ex) {
            Logger.getLogger(ChatFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        dstPN = Integer.parseInt(dstPNTF.getText());
//Initialize the socket
        try {
            sckt = new DatagramSocket(srcPN,srcIP);
            sckt.setSoTimeout(100);
        } catch (SocketException ex) {
            Logger.getLogger(ChatFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        chatBtn.setEnabled(true);
      
//rt.start();
    }//GEN-LAST:event_connectBtnMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChatFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChatFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChatFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChatFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ChatFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton chatBtn;
    private javax.swing.JTextArea chatTA;
    private javax.swing.JTextField chatTF;
    private javax.swing.JButton connectBtn;
    private javax.swing.JLabel dstIPLbl;
    private javax.swing.JTextField dstIPTF;
    private javax.swing.JLabel dstPNLbl;
    private javax.swing.JTextField dstPNTF;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel srcIPLbl;
    private javax.swing.JTextField srcIPTF;
    private javax.swing.JLabel srcPNLbl;
    private javax.swing.JTextField srcPNTF;
    // End of variables declaration//GEN-END:variables
}
